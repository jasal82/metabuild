name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: "${{ matrix.os.name }} ${{ matrix.test.name }} (${{ matrix.toolchain }})"
    continue-on-error: false
    runs-on: ${{ matrix.os.host }}
    container: ${{ matrix.os.container }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - { name: linux-debian-buster,   host: ubuntu-latest,  container: "debian:buster-slim",   target: "x86_64-unknown-linux-gnu" }
          - { name: linux-debian-bullseye, host: ubuntu-latest,  container: "debian:bullseye-slim", target: "x86_64-unknown-linux-gnu" }
          - { name: linux-alpine-3.16,     host: ubuntu-latest,  container: "alpine:3.16",          target: "x86_64-unknown-linux-gnu" }
          - { name: linux-ubuntu-2204,     host: ubuntu-latest,  container: "ubuntu:22.04",         target: "x86_64-unknown-linux-gnu" }
          - { name: linux-ubuntu-2004,     host: ubuntu-latest,  container: "ubuntu:20.04",         target: "x86_64-unknown-linux-gnu" }
          - { name: linux-musl,            host: ubuntu-latest,  container: "alpine:3.16",          target: "x86_64-unknown-linux-musl" }
          - { name: windows,               host: windows-latest, container: null }
        toolchain: [nightly, stable]

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3

      - name: Install prerequisites
        if: matrix.os.container != 'alpine:3.16' && matrix.os.container != null
        run: |
          apt-get update
          apt-get install -y gcc make perl curl

      - name: Install prerequisites
        if: matrix.os.container == 'alpine:3.16'
        run: |
          apk update
          apk add build-base perl curl

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test