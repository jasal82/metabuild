name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  publish-linux:
    runs-on: ${{ matrix.os.host }}
    container: ${{ matrix.os.container }}
    
    strategy:
      matrix:
        os:
          - name: linux-debian-buster
            host: ubuntu-22.04
            container: "debian:buster-slim"
            asset_name: mb-${{ github.ref_name }}-linux-x86_64-debian-buster
          - name: linux-debian-bullseye
            host: ubuntu-22.04
            container: "debian:bullseye-slim"
            asset_name: mb-${{ github.ref_name }}-linux-x86_64-debian-bullseye
          - name: linux-alpine-3.16
            host: ubuntu-22.04
            container: "alpine:3.16"
            asset_name: mb-${{ github.ref_name }}-linux-x86_64-alpine-3.16
          - name: linux-ubuntu-2204
            host: ubuntu-22.04
            container: ubuntu:22.04
            asset_name: mb-${{ github.ref_name }}-linux-x86_64-ubuntu-22.04
          - name: linux-ubuntu-2004
            host: ubuntu-22.04
            container: ubuntu:20.04
            asset_name: mb-${{ github.ref_name }}-linux-x86_64-ubuntu-20.04
    
    permissions:
      contents: write
      packages: write
      pull-requests: read
    
    steps:
      - uses: actions/checkout@v3
      - name: Install prerequisites
        if: matrix.os.container != 'alpine:3.16'
        run: |
          apt-get update
          apt-get install -y gcc libssl-dev pkg-config curl

      - name: Install prerequisites
        if: matrix.os.container == 'alpine:3.16'
        run: |
          apk update
          apk add build-base openssl-dev pkgconfig curl

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args:
            - --release
            - --locked

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/mb
          asset_name: ${{ matrix.os.asset_name }}
          tag: ${{ github.ref }}
  
  publish-windows:
    runs-on: windows-latest

    permissions:
      contents: write
      packages: write
      pull-requests: read

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release --locked
    - name: Build Windows installer
      run: |
        cargo install cargo-wix
        cargo wix
        "${{ github.ref_name }}" -match '^v([0-9]+\.[0-9]+\.[0-9]+).*'
        $version=$Matches.1
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/mb.exe
        asset_name: mb-${{ github.ref_name }}-windows-x86_64.exe
        tag: ${{ github.ref }}
    - name: Upload Windows installer to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/wix/mb-${{ env.BUILD_VERSION }}-x86_64.msi
        asset_name: metabuild-${{ github.ref_name }}-x86_64.msi
        tag: ${{ github.ref }}
